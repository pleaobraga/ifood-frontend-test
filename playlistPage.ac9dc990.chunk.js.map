{"version":3,"sources":["webpack:///./src/components/Atom/Image/styles.js","webpack:///./src/components/Atom/Image/Image.jsx","webpack:///./src/components/Molecule/Card/styles.js","webpack:///./src/components/Molecule/Card/Card.jsx","webpack:///./src/components/Organism/PlaylistsCard/styles.js","webpack:///./src/components/Organism/PlaylistsCard/PlaylistsCard.jsx","webpack:///./src/components/Atom/FilterButton/FilterButton.jsx","webpack:///./src/components/Molecule/FormField/FormField.jsx","webpack:///./src/components/Molecule/DateTimeField/DateTimeField.jsx","webpack:///./src/utils/yup.config.js","webpack:///./src/utils/formValidationHelper.js","webpack:///./src/utils/debounce.js","webpack:///./src/components/Organism/AdvancedFilter/styles.js","webpack:///./src/components/Organism/AdvancedFilter/AdvancedFilter.jsx","webpack:///./src/utils/constants.js","webpack:///./src/utils/formHelper.js","webpack:///./src/components/Molecule/SearchBar/SearchBar.jsx","webpack:///./src/components/Organism/Filter/styles.js","webpack:///./src/components/Organism/Filter/Filter.jsx","webpack:///./src/pages/PlayListPage/styles.js","webpack:///./src/pages/PlayListPage/PlaylitsPage.jsx","webpack:///./src/utils/urlHelper.js"],"names":["ImageContainer","styled","Box","theme","palette","background","Image","imgSrc","alt","useState","hasImgError","setHasImgError","className","src","onError","propTypes","PropTypes","string","StyledCard","Card","paperHover","link","name","CardContent","component","target","href","Typography","align","color","isRequired","StyledPlaylistsCard","Loader","Loading","PlaylistsCard","playlistsFiltered","isFetching","error","isNull","length","map","external_urls","id","images","key","url","spotify","array","bool","defaultProps","FilterButton","onClick","IconButton","aria-label","fontSize","func","FormField","props","values","handleChange","handleBlur","errors","label","type","select","disabled","inputPropsTF","placeholder","size","TextField","value","get","onChange","onBlur","helperText","has","margin","variant","fullWidth","inputProps","InputProps","SelectProps","MenuProps","disablePortal","children","object","node","DateTimeField","setFieldValue","setFieldTouched","format","userDateFormat","DateTimePicker","allowKeyboardControl","date","formatDefault","inputVariant","ampm","labelFunc","isValid","Date","startAdornment","e","stopPropagation","preventDefault","style","order","yup","number","min","max","unicodeFormat","toUnicodeStandarts","test","isMatch","schemaValidator","Object","assign","replace","match","getType","yupType","message","inputType","yuptype","createYupFieldSchema","schema","config","validation","mixed","primitiveType","entityType","otherValidations","validationType","validator","typeError","forIn","useDebounce","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","StyledAdvancedFilter","spacing","breakpoints","down","AdvancedFilter","formikProps","filters","onValuesChange","debouncedFilters","advanced","hasErrors","element","paddingTop","isEmpty","Grid","container","wrap","f","item","md","sm","xs","fieldData","MenuItem","pattern","createFormField","SearchBar","onSearchBarChange","InputAdornment","position","StyledFilter","Paper","Filter","onFiltersChange","onPageError","showMoreFilters","setShowMoreFilters","filtersState","useSelector","selectFilters","isFetchingFilters","selectIsFetchingFilters","selectAllFilters","hasErrorFilter","selectHasErrorFilters","toggleMoreFilters","validationSchema","useMemo","fieldsSchema","reduce","shape","initialValues","field","searchBar","AdvancedFilterClassName","cx","hide","ClickAwayListener","onClickAway","Container","maxWidth","validateOnChange","enableReinitialize","StyledPlaylistPage","PlaylitsPage","dispatch","useDispatch","playlistState","selectPlaylists","playlists","selectAllPlaylists","hasErrorPlaylists","selectHasErrorPlaylists","apiFilter","selectApiFilter","debouncedPlaylist","updatePlaylist","useCallback","getPlaylistRequest","filter","updateIsFetching","getFilter","getFilterRequest","getPlaylist","filterPlaylistAction","params","push","encodeURIComponent","join"],"mappings":"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","file":"playlistPage.ac9dc990.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport Box from '@material-ui/core/Box'\n\nexport const ImageContainer = styled(Box)`\n  ${({ theme }) => `\n  width: 100%;\n  height: 100%;\n\n  .card__image {\n    width: 100%;\n    height: 100%;\n  }\n\n  .bg-icon {\n    width: 100%;\n    height: 100%;\n    color: ${theme.palette.background.default};\n  }\n  `}\n`\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport InsertPhotoIcon from '@material-ui/icons/InsertPhoto'\nimport { ImageContainer } from './styles'\n\nconst Image = ({ imgSrc, alt }) => {\n  const [hasImgError, setHasImgError] = useState(false)\n\n  const handleImageError = () => {\n    setHasImgError(true)\n  }\n\n  return (\n    <ImageContainer>\n      {hasImgError || !imgSrc ? (\n        <InsertPhotoIcon className=\"bg-icon\" />\n      ) : (\n        <img\n          className=\"card__image\"\n          src={imgSrc}\n          onError={handleImageError}\n          alt={alt}\n        />\n      )}\n    </ImageContainer>\n  )\n}\n\nImage.propTypes = {\n  imgSrc: PropTypes.string,\n  alt: PropTypes.string,\n}\n\nexport default Image\n","import styled from 'styled-components'\nimport Card from '@material-ui/core/Card'\n\nexport const StyledCard = styled(Card)`\n  ${({ theme }) => `\n  width: 230px;\n  margin: 0.5rem 1rem 0.5rem 0;\n\n  :hover {\n    background: ${theme.palette.background.paperHover};\n  }\n\n  .card {\n    &__content {\n      display: flex;\n      flex-direction: column;\n      text-decoration: none;\n    }\n\n    &__image {\n      width: 200px;\n      height: 200px;\n    }\n\n    &__title {\n      margin-top: 20px;\n      font-weight: bold;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n  `}\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport { Image } from '../../Atom/Image'\nimport { StyledCard } from './styles'\n\nconst Card = ({ link, imgSrc, name }) => {\n  return (\n    <StyledCard>\n      <CardContent\n        className=\"card__content\"\n        component=\"a\"\n        target=\"_blank\"\n        href={link}\n      >\n        <Box className=\"card__image\">\n          <Image imgSrc={imgSrc} alt=\"imagem do album\" />\n        </Box>\n        <Typography className=\"card__title\" align=\"left\" color=\"textPrimary\">\n          {name}\n        </Typography>\n      </CardContent>\n    </StyledCard>\n  )\n}\n\nCard.propTypes = {\n  link: PropTypes.string,\n  imgSrc: PropTypes.string,\n  name: PropTypes.string.isRequired,\n}\n\nexport default Card\n","import styled from 'styled-components'\nimport Box from '@material-ui/core/Box'\nimport Loading from '../../Atom/Loading'\n\nexport const StyledPlaylistsCard = styled(Box)`\n  display: flex;\n  flex-wrap: wrap;\n\n  width: 100%;\n  height: 100%;\n`\n\nexport const Loader = styled(Loading)`\n  display: flex;\n  height: 500px;\n  align-items: center;\n  justify-content: center;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { isNull } from 'lodash'\nimport { Card } from '../../Molecule/Card'\nimport Typography from '@material-ui/core/Typography'\nimport { StyledPlaylistsCard, Loader } from './styles'\n\nconst PlaylistsCard = ({ className, playlistsFiltered, isFetching, error }) => {\n  if (isFetching) return <Loader />\n\n  if (!isNull(error)) {\n    return (\n      <Typography className=\"play-lists__error\" color=\"textPrimary\">\n        {error}\n      </Typography>\n    )\n  }\n\n  return playlistsFiltered.length === 0 ? (\n    <Typography className=\"play-lists__empty\" color=\"textPrimary\">\n      Nenhum item a ser exibido.\n    </Typography>\n  ) : (\n    <StyledPlaylistsCard className={className}>\n      {playlistsFiltered.map(({ external_urls, id, name, images }) => {\n        return (\n          <Card\n            key={id}\n            name={name}\n            imgSrc={images[0].url}\n            link={external_urls.spotify}\n          />\n        )\n      })}\n    </StyledPlaylistsCard>\n  )\n}\n\nPlaylistsCard.propTypes = {\n  className: PropTypes.string,\n  playlistsFiltered: PropTypes.array,\n  isFetching: PropTypes.bool,\n  error: PropTypes.string,\n}\n\nPlaylistsCard.defaultProps = {\n  className: '',\n  playlistsFiltered: [],\n}\n\nexport default PlaylistsCard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport FilterListIcon from '@material-ui/icons/FilterList'\nimport IconButton from '@material-ui/core/IconButton'\n\nconst FilterButton = ({ onClick }) => {\n  return (\n    <IconButton onClick={onClick} aria-label=\"filter\">\n      <FilterListIcon fontSize=\"large\" />\n    </IconButton>\n  )\n}\n\nFilterButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n}\n\nexport default FilterButton\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { has, get } from 'lodash'\nimport TextField from '@material-ui/core/TextField'\n\nconst FormField = (props) => {\n  const {\n    values,\n    handleChange,\n    handleBlur,\n    errors,\n    name,\n    label,\n    type,\n    select,\n    disabled,\n    className,\n    inputPropsTF,\n    placeholder,\n    size,\n  } = props\n\n  return (\n    <TextField\n      disabled={disabled}\n      className={className}\n      label={label}\n      name={name}\n      value={get(values, name) || ''}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      helperText={has(errors, name) && get(errors, name)}\n      error={has(errors, name)}\n      margin=\"normal\"\n      variant=\"outlined\"\n      select={select}\n      placeholder={placeholder}\n      size={size}\n      fullWidth\n      inputProps={{ type: type }}\n      InputProps={{ ...inputPropsTF }}\n      SelectProps={{\n        MenuProps: { disablePortal: true },\n      }}\n    >\n      {props.children}\n    </TextField>\n  )\n}\n\nFormField.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  errors: PropTypes.object.isRequired,\n  handleBlur: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  values: PropTypes.object.isRequired,\n  type: PropTypes.string.isRequired,\n  select: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  inputPropsTF: PropTypes.object,\n  disabled: PropTypes.bool,\n  placeholder: PropTypes.string,\n  size: PropTypes.string,\n}\n\nFormField.defaultProps = {\n  type: 'text',\n  select: false,\n  className: '',\n  onClick: () => {},\n  inputPropsTF: {},\n  disabled: false,\n}\n\nexport default FormField\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { has, get } from 'lodash'\nimport { format as formatDefault, isValid } from 'date-fns'\nimport { DateTimePicker } from '@material-ui/pickers'\nimport IconButton from '@material-ui/core/IconButton'\nimport Close from '@material-ui/icons/Close'\n\nconst DateTimeField = (props) => {\n  const {\n    values,\n    errors,\n    name,\n    label,\n    className,\n    setFieldValue,\n    setFieldTouched,\n    format,\n    size,\n    disabled,\n    userDateFormat,\n  } = props\n\n  const handleChange = (date) => {\n    setFieldValue(name, formatDefault(date, format) || '')\n  }\n\n  const handleClear = (e) => {\n    e.stopPropagation()\n    e.preventDefault()\n    setFieldValue(name, '')\n  }\n\n  const handleBlur = () => {\n    setFieldTouched(name, true)\n  }\n\n  const formatDefaultData = (date) => {\n    if (!isValid(date)) return ''\n\n    return formatDefault(new Date(date), userDateFormat)\n  }\n\n  return (\n    <DateTimePicker\n      disabled={disabled}\n      allowKeyboardControl\n      className={className}\n      label={label}\n      name={name}\n      value={get(values, name) || null}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      helperText={has(errors, name) && get(errors, name)}\n      error={has(errors, name)}\n      margin=\"normal\"\n      inputVariant=\"outlined\"\n      size={size}\n      ampm={false}\n      labelFunc={formatDefaultData}\n      fullWidth\n      InputProps={{\n        startAdornment: (\n          <IconButton onClick={handleClear} style={{ order: 1 }}>\n            <Close color=\"disabled\" fontSize=\"small\" />\n          </IconButton>\n        ),\n      }}\n    />\n  )\n}\n\nDateTimeField.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  errors: PropTypes.object.isRequired,\n  values: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  format: PropTypes.string,\n  setFieldValue: PropTypes.func.isRequired,\n  setFieldTouched: PropTypes.func.isRequired,\n  size: PropTypes.string,\n  disabled: PropTypes.bool,\n  userDateFormat: PropTypes.string,\n}\n\nDateTimeField.defaultProps = {\n  className: '',\n  disabled: false,\n  format: 'dd/MM/yyyy HH:mm',\n  userDateFormat: 'dd/MM/yyyy HH:mm',\n}\n\nexport default DateTimeField\n","import * as yup from 'yup'\nimport isMatch from 'date-fns/isMatch'\nimport { toUnicodeStandarts } from './formValidationHelper'\n\nyup.setLocale({\n  number: {\n    min: 'Número deve ser maior que ${min}',\n    max: 'Número deve ser menor que ${max}',\n  },\n})\n\nyup.addMethod(yup.date, 'pattern', function (format) {\n  const unicodeFormat = toUnicodeStandarts(format)\n\n  return yup\n    .string()\n    .test('pattern', `Utilize o padrão ${format}`, function (value) {\n      if (!value || value.length === 0) return true\n\n      return isMatch(value, unicodeFormat)\n    })\n})\n\nconst schemaValidator = Object.assign({}, yup)\n\nexport default schemaValidator\n","import schemaValidator from './yup.config'\nimport { forIn } from 'lodash'\n\nexport const toUnicodeStandarts = (format) => {\n  const regex = /T/gm\n\n  return format.replace(regex, (match) => `'${match}'`)\n}\n\nexport const getType = (type) => {\n  switch (type) {\n    case 'STRING':\n      return {\n        yupType: 'string',\n        message: 'Insira caracteres válidos',\n        type: 'text',\n      }\n\n    case 'INTEGER':\n    case 'FLOAT':\n      return {\n        yupType: 'number',\n        message: 'Insira um número válido',\n        inputType: 'number',\n      }\n\n    case 'DATE_TIME':\n      return {\n        yupType: 'date',\n        message: 'Insira uma data válida',\n        type: 'datetime-local',\n      }\n\n    default:\n      return {\n        yuptype: 'mixed',\n        message: 'Insira caracteres válidos',\n        type: 'text',\n      }\n  }\n}\n\nexport const createYupFieldSchema = (schema, config) => {\n  const { id, validation } = config\n\n  if (!validation) {\n    schema[id] = schemaValidator.mixed()\n    return schema\n  }\n\n  const { primitiveType, entityType, ...otherValidations } = validation\n\n  const validationType = getType(entityType || primitiveType)\n\n  let validator = schemaValidator[validationType.yupType]().typeError(\n    validationType.message\n  )\n\n  forIn(otherValidations, (value, key) => {\n    if (!validator[key]) {\n      return\n    }\n\n    validator = validator[key](value)\n  })\n\n  schema[id] = validator\n  return schema\n}\n\nexport const createYupSchema = (fields) => {\n  const fieldsSchema = fields.reduce(createYupFieldSchema, {})\n\n  return schemaValidator\n    .object()\n    .shape({ advanced: schemaValidator.object().shape(fieldsSchema) })\n}\n\n","import { useEffect, useState } from 'react'\n\nexport function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value)\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import styled from 'styled-components'\nimport Box from '@material-ui/core/Box'\n\nexport const StyledAdvancedFilter = styled(Box)`\n  ${({ theme }) => `\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-top: ${theme.spacing(2)}px;\n  margin-bottom: ${theme.spacing(2)}px;\n\n  max-height: calc(100vh - 100px);\n\n  .advanced-filter {\n    &__title {\n      font-weight: bold;\n\n      ${theme.breakpoints.down('sm')} {\n        margin-bottom: ${theme.spacing(2)}px;\n      }\n    }\n\n    &__filters-container{\n      overflow-y: auto;\n      overflow-x: hidden;\n    }\n\n    &__filter {\n        &.MuiGrid-item{\n          padding-top: 0;\n        }\n      }\n    }\n  }\n  `}\n`\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport { isEmpty, has } from 'lodash'\nimport Typography from '@material-ui/core/Typography'\nimport Loading from '../../Atom/Loading'\nimport { createFormField } from '../../../utils/formHelper'\nimport { useDebounce } from '../../../utils/debounce'\nimport { DEBOUNCE_CHANGE_FIELDS_TIME } from '../../../utils/constants'\nimport { StyledAdvancedFilter } from './styles'\n\nconst AdvancedFilter = ({\n  formikProps,\n  filters,\n  isFetching,\n  error,\n  onValuesChange,\n  className,\n}) => {\n  const debouncedFilters = useDebounce(\n    formikProps.values?.advanced,\n    DEBOUNCE_CHANGE_FIELDS_TIME\n  )\n\n  useEffect(() => {\n    const { values, errors } = formikProps\n    const hasErrors = has(errors, 'advanced')\n\n    onValuesChange({ values: values.advanced, hasErrors })\n  }, [debouncedFilters])\n\n  const renderFilters = () => {\n    if (isFetching) {\n      return (\n        <Box paddingTop={2}>\n          <Loading />\n        </Box>\n      )\n    }\n\n    if (!isEmpty(error)) {\n      return (\n        <Typography className=\"advanced-filter__error\" color=\"textPrimary\">\n          Houve um erro ao carregar os filtros\n        </Typography>\n      )\n    }\n\n    return filters.length === 0 ? (\n      <Typography className=\"advanced-filter__empty\" color=\"textPrimary\">\n        Não existem filtros avançados\n      </Typography>\n    ) : (\n      <Grid\n        container\n        spacing={2}\n        wrap=\"wrap\"\n        className=\"advanced-filter__filters-container\"\n      >\n        {filters.map((f) => (\n          <Grid\n            item\n            md={3}\n            sm={4}\n            xs={12}\n            key={`grid-${f.id}`}\n            className=\"advanced-filter__filter\"\n          >\n            {createFormField({ fieldData: f, formikProps })}\n          </Grid>\n        ))}\n      </Grid>\n    )\n  }\n\n  return (\n    <StyledAdvancedFilter className={className}>\n      <Typography\n        element=\"h2\"\n        color=\"textPrimary\"\n        className=\"advanced-filter__title\"\n      >\n        Filtros avançados\n      </Typography>\n      {renderFilters()}\n    </StyledAdvancedFilter>\n  )\n}\n\nAdvancedFilter.propTypes = {\n  onValuesChange: PropTypes.func,\n  formikProps: PropTypes.object.isRequired,\n  filters: PropTypes.array,\n  isFetching: PropTypes.bool,\n  error: PropTypes.object,\n  className: PropTypes.string,\n}\n\nAdvancedFilter.defaultProps = {\n  filters: [],\n  className: '',\n  onValuesChange: () => {},\n}\n\nexport default AdvancedFilter\n","// ---- debounce time ----\n\nexport const DEBOUNCE_PLAYLIST_TIME = 30000\nexport const DEBOUNCE_CHANGE_FIELDS_TIME = 250\n","import React from 'react'\nimport { FormField } from '../components/Molecule/FormField'\nimport { DateTimeField } from '../components/Molecule/DateTimeField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { getType, toUnicodeStandarts } from './formValidationHelper'\n\nexport const createFormField = ({ fieldData = null, formikProps }) => {\n  if (!fieldData) return\n\n  if (fieldData.values) {\n    return (\n      <FormField\n        name={`advanced.${fieldData.id}`}\n        label={fieldData.name}\n        select={true}\n        {...formikProps}\n      >\n        <MenuItem value={''}>\n          <em>Limpar</em>\n        </MenuItem>\n        {fieldData.values.map((value) => (\n          <MenuItem key={value.value} value={value.value}>\n            {value.name}\n          </MenuItem>\n        ))}\n      </FormField>\n    )\n  }\n\n  const { primitiveType, entityType } = fieldData.validation\n\n  const { type } = getType(entityType || primitiveType)\n\n  if (type === 'datetime-local') {\n    return (\n      <DateTimeField\n        {...formikProps}\n        name={`advanced.${fieldData.id}`}\n        label={fieldData.name}\n        format={toUnicodeStandarts(fieldData.validation.pattern)}\n      />\n    )\n  }\n\n  return (\n    <FormField\n      name={`advanced.${fieldData.id}`}\n      label={fieldData.name}\n      type={type}\n      {...formikProps}\n    />\n  )\n}\n\nexport const createInitialValues = (fields) => {\n  return fields.reduce((initialValues, field) => {\n    initialValues[field.id] = ''\n    return initialValues\n  }, {})\n}\n","/* eslint-disable no-undef */\nimport React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { get } from 'lodash'\nimport { FormField } from '../FormField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst SearchBar = ({ onSearchBarChange, formikProps, placeholder, name }) => {\n  const values = get(formikProps.values, name)\n\n  useEffect(() => {\n    onSearchBarChange(values)\n  }, [values, onSearchBarChange])\n\n  return (\n    <FormField\n      {...formikProps}\n      name={name}\n      placeholder={placeholder}\n      inputPropsTF={{\n        startAdornment: (\n          <InputAdornment position=\"start\">\n            <SearchIcon />\n          </InputAdornment>\n        ),\n      }}\n    />\n  )\n}\n\nSearchBar.propTypes = {\n  onSearchBarChange: PropTypes.func,\n  formikProps: PropTypes.object.isRequired,\n  placeholder: PropTypes.string,\n  name: PropTypes.string,\n}\n\nSearchBar.defaultProps = {\n  placeholder: 'Pesquisar',\n  name: 'searchBar',\n  onSearchBarChange: () => {},\n}\n\nexport default SearchBar\n","import styled from 'styled-components'\nimport Paper from '@material-ui/core/Paper'\n\nexport const StyledFilter = styled(Paper)`\n  ${({ theme }) => `\n  display: flex;\n  position: fixed;\n  background: ${theme.palette.background.default};\n  z-index: 2;\n  width: 100%;\n  padding-bottom: ${theme.spacing(1)}px;\n\n  .hide {\n    display: none;\n  }\n\n  .filter {\n    &__form {\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n\n      .main-filter {\n        display: flex;\n        width: 100%;\n        align-items: center;\n      }\n    }\n  }\n\n  .brand {\n    margin-right: 3rem;\n    font-size: 2rem;\n    font-weight: bold;\n\n    ${theme.breakpoints.down('sm')} {\n      margin-right: ${theme.spacing(2)}px;\n    }\n\n\n    ${theme.breakpoints.down('xs')} {\n      display:none\n    }\n  }\n\n  .loader {\n    margin-left: ${theme.spacing(2)}px;\n  }\n  `}\n`\n","import React, { useState, useMemo, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSelector } from 'react-redux'\nimport { Formik } from 'formik'\nimport {\n  selectFilters,\n  selectAllFilters,\n  selectHasErrorFilters,\n  selectIsFetchingFilters,\n} from '../../../redux/reducer/FilterReducer'\nimport { FilterButton } from '../../Atom/FilterButton'\nimport { AdvancedFilter } from '../AdvancedFilter'\nimport Box from '@material-ui/core/Box'\nimport { Typography } from '@material-ui/core'\nimport Container from '@material-ui/core/Container'\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\nimport { createInitialValues } from '../../../utils/formHelper'\nimport { createYupSchema } from '../../../utils/formValidationHelper'\nimport { SearchBar } from '../../Molecule/SearchBar'\nimport Loading from '../../Atom/Loading'\nimport { StyledFilter } from './styles'\nimport cx from 'classnames'\n\nconst Filter = ({\n  onSearchBarChange,\n  onFiltersChange,\n  onPageError,\n  className,\n}) => {\n  const [showMoreFilters, setShowMoreFilters] = useState(false)\n  const filtersState = useSelector(selectFilters)\n  const isFetchingFilters = useSelector(selectIsFetchingFilters)\n  const filters = useSelector(selectAllFilters)\n  const hasErrorFilter = useSelector(selectHasErrorFilters)\n\n  const toggleMoreFilters = () => {\n    setShowMoreFilters(!showMoreFilters)\n  }\n\n  const validationSchema = useMemo(() => createYupSchema(filters), [filters])\n\n  const initialValues = useMemo(() => {\n    const advanced = createInitialValues([...filters])\n    return { advanced: advanced, searchBar: '' }\n  }, [filters])\n\n  const handleClickAway = () => {\n    if (showMoreFilters) {\n      setShowMoreFilters(false)\n    }\n  }\n\n  const renderFilterButton = () => {\n    if (isFetchingFilters) return <Loading className=\"loader\" />\n\n    if (filters.length > 0 && !hasErrorFilter) {\n      return <FilterButton onClick={toggleMoreFilters} />\n    }\n  }\n\n  useEffect(() => {\n    if (onPageError === true) {\n      setShowMoreFilters(false)\n    }\n  }, [onPageError])\n\n  const AdvancedFilterClassName = cx({ hide: !showMoreFilters })\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n      <StyledFilter component=\"header\" className={className}>\n        <Container maxWidth=\"lg\">\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            validateOnChange\n            enableReinitialize\n          >\n            {(formikProps) => {\n              return (\n                <Box className=\"filter__form\" component=\"form\">\n                  <Box className=\"main-filter\">\n                    <Typography\n                      className=\"brand\"\n                      component=\"h2\"\n                      color=\"primary\"\n                    >\n                      Spotifood\n                    </Typography>\n                    <SearchBar\n                      formikProps={formikProps}\n                      onSearchBarChange={onSearchBarChange}\n                    />\n                    {renderFilterButton()}\n                  </Box>\n                  <AdvancedFilter\n                    className={AdvancedFilterClassName}\n                    formikProps={formikProps}\n                    onValuesChange={onFiltersChange}\n                    {...filtersState}\n                  />\n                </Box>\n              )\n            }}\n          </Formik>\n        </Container>\n      </StyledFilter>\n    </ClickAwayListener>\n  )\n}\n\nFilter.propTypes = {\n  onSearchBarChange: PropTypes.func,\n  onFiltersChange: PropTypes.func,\n  onPageError: PropTypes.bool,\n  className: PropTypes.string,\n}\n\nFilter.defaultProps = {\n  className: '',\n}\n\nexport default Filter\n","import styled from 'styled-components'\nimport Box from '@material-ui/core/Box'\n\nexport const StyledPlaylistPage = styled(Box)`\n  ${({ theme }) => `\n\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n\n  width: 100%;\n  min-width: 100%;\n\n  padding-top: 100px;\n  padding-bottom: ${theme.spacing(3)}px;\n\n  background: ${theme.palette.background.default};\n\n\n  .page{\n    &__title {\n      font-size: 2.5rem;\n      font-weight: bold;\n      \n      margin: ${theme.spacing(2)}px 0;\n\n      ${theme.breakpoints.down('xs')} {\n        text-align: center;\n      }\n    }\n\n    &__card-list {\n      ${theme.breakpoints.down('xs')} {\n        justify-content: space-around;\n      }\n    }\n  }\n\n   `}\n`\n","import React, { useCallback, useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport { PlaylistsCard } from '../../components/Organism/PlaylistsCard'\nimport { Filter } from '../../components/Organism/Filter'\nimport { getFilterRequest } from '../../redux/actions/filter'\nimport {\n  getPlaylistRequest,\n  filterPlaylistAction,\n} from '../../redux/actions/playlist'\nimport {\n  selectPlaylists,\n  selectApiFilter,\n  selectAllPlaylists,\n  selectHasErrorPlaylists,\n} from '../../redux/reducer/PlaylistReducer'\nimport { createQueryParams } from '../../utils/urlHelper'\nimport { useDebounce } from '../../utils/debounce'\nimport { DEBOUNCE_PLAYLIST_TIME } from '../../utils/constants'\nimport { StyledPlaylistPage } from './styles'\n\nconst PlaylitsPage = () => {\n  const dispatch = useDispatch()\n  const playlistState = useSelector(selectPlaylists)\n  const playlists = useSelector(selectAllPlaylists)\n  const hasErrorPlaylists = useSelector(selectHasErrorPlaylists)\n  const apiFilter = useSelector(selectApiFilter)\n\n  const debouncedPlaylist = useDebounce(playlists, DEBOUNCE_PLAYLIST_TIME)\n\n  const updatePlaylist = useCallback(() => {\n    !hasErrorPlaylists &&\n      dispatch(\n        getPlaylistRequest({ filter: apiFilter, updateIsFetching: false })\n      )\n  }, [dispatch, hasErrorPlaylists, apiFilter])\n\n  useEffect(() => {\n    updatePlaylist()\n  }, [debouncedPlaylist])\n\n  const getFilter = useCallback(() => dispatch(getFilterRequest()), [dispatch])\n\n  useEffect(() => {\n    getFilter()\n  }, [getFilter])\n\n  const getPlaylist = useCallback(\n    () => dispatch(getPlaylistRequest({ filter: '' })),\n    [dispatch]\n  )\n\n  useEffect(() => {\n    getPlaylist()\n  }, [getPlaylist])\n\n  const onSearchBarChange = useCallback(\n    (filter) => dispatch(filterPlaylistAction({ filter })),\n    [dispatch]\n  )\n\n  const onFiltersChange = useCallback(\n    ({ values, hasErrors }) => {\n      if (!hasErrors) {\n        const filter = createQueryParams(values)\n        filter !== apiFilter && dispatch(getPlaylistRequest({ filter }))\n      }\n    },\n    [dispatch, apiFilter]\n  )\n\n  const onPageError = useMemo(() => hasErrorPlaylists, [hasErrorPlaylists])\n\n  return (\n    <>\n      <Filter\n        onSearchBarChange={onSearchBarChange}\n        onFiltersChange={onFiltersChange}\n        onPageError={onPageError}\n      />\n      <StyledPlaylistPage component=\"main\">\n        <Container className=\"page__container\" maxWidth=\"lg\">\n          <Box component=\"section\">\n            <Typography\n              component=\"h1\"\n              color=\"textPrimary\"\n              className=\"page__title\"\n            >\n              Playlists\n            </Typography>\n            <PlaylistsCard className=\"page__card-list\" {...playlistState} />\n          </Box>\n        </Container>\n      </StyledPlaylistPage>\n    </>\n  )\n}\n\nexport default PlaylitsPage\n","import { forIn } from 'lodash'\n\nexport const createQueryParams = (filters) => {\n  const params = []\n\n  forIn(filters, (value, key) => {\n    if (value !== '') {\n      params.push(`${key}=${encodeURIComponent(value)}`)\n    }\n  })\n\n  return params.length > 0 ? '?' + params.join('&') : ''\n}\n"],"sourceRoot":""}